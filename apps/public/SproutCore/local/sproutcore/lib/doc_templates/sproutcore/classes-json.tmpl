{!
function keys(o) {
  var keys = [];
  for (var k in o) { keys.push(k); }
  return keys;
}

function groupName(path) {
  var parts = path.split('/') ;
  
  var rootIndex = parts.indexOf('frameworks') ;
  if (rootIndex < 0) rootIndex = parts.indexOf('clients') ;
  
  if (rootIndex < 0) {
    return parts[parts.length - 2] ;
    
  } else {
    return parts.slice(rootIndex+2, parts.length-1).join('/') ;
  }
};

function getSymbols(thisClass) {
  var ret = [thisClass.alias.toLowerCase()] ;
  var len = thisClass.properties.length ;
  
  while (--len>=0) {
    ret.push(thisClass.properties[len].alias.toLowerCase()) ;
  }
  
  return ret.join(' ') ;
};

!}
{ records: [
  <for each="thisClass" in="data">
    <if test="groupName(thisClass.srcFile) !== undefined">
      { "type": "Doc", 
        "guid": "{+(thisClass.alias)+}", 
        <if test="!(thisClass.alias == 'SC')">
          "title": "{+(thisClass.alias)+}",
        </if>
        <if test="(thisClass.alias == 'SC')">
          "title": "SproutCore (SC)",
        </if>
        "url": "{+(thisClass.alias)+}.html",
        <if test="!(thisClass.alias == 'SC')">
          "group": "{+groupName(thisClass.srcFile)+}",
        </if>
        "symbols": "{+getSymbols(thisClass)+}",
        "path": "{+thisClass.srcFile+}"
      },
    </if>
  </for>
  ]
}
